// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SjediBa.Models;

namespace SjediBa.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SjediBa.Models.AdministratorModel", b =>
                {
                    b.Property<int>("AdministratorModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.Property<string>("Username");

                    b.HasKey("AdministratorModelId");

                    b.ToTable("Administrator");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AdministratorModel");
                });

            modelBuilder.Entity("SjediBa.Models.EventModel", b =>
                {
                    b.Property<int>("EventModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<int>("OrganizerModelId");

                    b.Property<int>("SpaceModelId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("EventModelId");

                    b.HasIndex("OrganizerModelId");

                    b.HasIndex("SpaceModelId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("SjediBa.Models.NotificationModel", b =>
                {
                    b.Property<int>("NotificationModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Notification");

                    b.Property<int>("RegisteredUserModelId");

                    b.HasKey("NotificationModelId");

                    b.HasIndex("RegisteredUserModelId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("SjediBa.Models.OrganizerModel", b =>
                {
                    b.Property<int>("OrganizerModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("Username");

                    b.Property<string>("password");

                    b.HasKey("OrganizerModelId");

                    b.ToTable("Organizer");
                });

            modelBuilder.Entity("SjediBa.Models.ReservationModel", b =>
                {
                    b.Property<int>("ReservationModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventModelId");

                    b.Property<int>("SeatModelId");

                    b.Property<int>("UserModelId");

                    b.HasKey("ReservationModelId");

                    b.HasIndex("EventModelId");

                    b.HasIndex("SeatModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("SjediBa.Models.SeatModel", b =>
                {
                    b.Property<int>("SeatModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RowSeat");

                    b.Property<int>("SectionModelId");

                    b.HasKey("SeatModelId");

                    b.HasIndex("SectionModelId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("SjediBa.Models.SectionModel", b =>
                {
                    b.Property<int>("SectionModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SeatPrices");

                    b.Property<int>("SpaceModelId");

                    b.HasKey("SectionModelId");

                    b.HasIndex("SpaceModelId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("SjediBa.Models.SpaceModel", b =>
                {
                    b.Property<int>("SpaceModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("LocalAdministratorModelId");

                    b.Property<string>("Name");

                    b.HasKey("SpaceModelId");

                    b.HasIndex("LocalAdministratorModelId");

                    b.ToTable("Space");
                });

            modelBuilder.Entity("SjediBa.Models.UserModel", b =>
                {
                    b.Property<int>("UserModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("Username");

                    b.Property<string>("password");

                    b.HasKey("UserModelId");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserModel");
                });

            modelBuilder.Entity("SjediBa.Models.LocalAdministratorModel", b =>
                {
                    b.HasBaseType("SjediBa.Models.AdministratorModel");

                    b.ToTable("Local Administrator");

                    b.HasDiscriminator().HasValue("LocalAdministratorModel");
                });

            modelBuilder.Entity("SjediBa.Models.MainAdministratorModel", b =>
                {
                    b.HasBaseType("SjediBa.Models.AdministratorModel");

                    b.ToTable("Main Administrator");

                    b.HasDiscriminator().HasValue("MainAdministratorModel");
                });

            modelBuilder.Entity("SjediBa.Models.RegisteredUserModel", b =>
                {
                    b.HasBaseType("SjediBa.Models.UserModel");

                    b.ToTable("Registred User");

                    b.HasDiscriminator().HasValue("RegisteredUserModel");
                });

            modelBuilder.Entity("SjediBa.Models.UnregistredUserModel", b =>
                {
                    b.HasBaseType("SjediBa.Models.UserModel");

                    b.ToTable("Unregistred User");

                    b.HasDiscriminator().HasValue("UnregistredUserModel");
                });

            modelBuilder.Entity("SjediBa.Models.EventModel", b =>
                {
                    b.HasOne("SjediBa.Models.OrganizerModel", "OrganizerModel")
                        .WithMany("EventModels")
                        .HasForeignKey("OrganizerModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SjediBa.Models.SpaceModel", "SpaceModel")
                        .WithMany()
                        .HasForeignKey("SpaceModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SjediBa.Models.NotificationModel", b =>
                {
                    b.HasOne("SjediBa.Models.RegisteredUserModel", "RegisteredUserModel")
                        .WithMany("NotificationModels")
                        .HasForeignKey("RegisteredUserModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SjediBa.Models.ReservationModel", b =>
                {
                    b.HasOne("SjediBa.Models.EventModel", "EventModel")
                        .WithMany()
                        .HasForeignKey("EventModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SjediBa.Models.SeatModel", "SeatModel")
                        .WithMany()
                        .HasForeignKey("SeatModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SjediBa.Models.UserModel", "UserModel")
                        .WithMany("ReservationModels")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SjediBa.Models.SeatModel", b =>
                {
                    b.HasOne("SjediBa.Models.SectionModel", "SectionModel")
                        .WithMany("SeatModels")
                        .HasForeignKey("SectionModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SjediBa.Models.SectionModel", b =>
                {
                    b.HasOne("SjediBa.Models.SpaceModel", "SpaceModel")
                        .WithMany("SectionModels")
                        .HasForeignKey("SpaceModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SjediBa.Models.SpaceModel", b =>
                {
                    b.HasOne("SjediBa.Models.LocalAdministratorModel", "LocalAdministratorModel")
                        .WithMany()
                        .HasForeignKey("LocalAdministratorModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
